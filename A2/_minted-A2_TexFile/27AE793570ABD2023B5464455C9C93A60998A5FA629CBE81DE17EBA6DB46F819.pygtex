\begin{Verbatim}[commandchars=\\\{\}]
                    \PYG{c+c1}{\PYGZsh{} We returned from the backtracking}
                    \PYG{c+c1}{\PYGZsh{} if completed then we are done}
                    \PYG{c+c1}{\PYGZsh{} collapse the call stack}
                    \PYG{k}{if} \PYG{n}{completed}\PYG{p}{:}
                        \PYG{k}{return} \PYG{n}{puzzle}\PYG{p}{,} \PYG{n}{completed}

                \PYG{k}{else}\PYG{p}{:}
                    \PYG{k}{return} \PYG{n}{puzzle}\PYG{p}{,} \PYG{n}{completed}
        \PYG{c+c1}{\PYGZsh{} we returned from the backtracking}
        \PYG{c+c1}{\PYGZsh{} or the value is invalid}
        \PYG{c+c1}{\PYGZsh{} so restore the starting state}
        \PYG{c+c1}{\PYGZsh{} remove the value from the domain}
        \PYG{c+c1}{\PYGZsh{} and continue to the next value in the domain}
        \PYG{n}{puzzle} \PYG{o}{=} \PYG{n}{state}
        \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}\PYG{o}{.}\PYG{n}{domain}\PYG{o}{.}\PYG{n}{remove}\PYG{p}{(}\PYG{n}{value}\PYG{p}{)}
    \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}\PYG{o}{.}\PYG{n}{value} \PYG{o}{=} \PYG{n+nb+bp}{None}

    \PYG{c+c1}{\PYGZsh{} This value had no values in its domain that worked}
    \PYG{c+c1}{\PYGZsh{} Backtrack to previous node}
    \PYG{k}{return} \PYG{n}{puzzle}\PYG{p}{,} \PYG{n+nb+bp}{False}

\PYG{k}{def} \PYG{n+nf}{valid}\PYG{p}{(}\PYG{n}{puzzle}\PYG{p}{,} \PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n}{value}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{    Checks if a value is valid with the contraint}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    Params:}
\PYG{l+s+sd}{        puzzle: A 2d array of Node objects}
\PYG{l+s+sd}{        row: The row of the current node}
\PYG{l+s+sd}{        col: The col of the current node}
\PYG{l+s+sd}{        value: The value you are checking that works}
\PYG{l+s+sd}{    returns:}
\PYG{l+s+sd}{        True if the value is valid, false otherwise}
\PYG{l+s+sd}{    \PYGZsq{}\PYGZsq{}\PYGZsq{}}
    \PYG{n}{node} \PYG{o}{=} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}

    \PYG{c+c1}{\PYGZsh{} Row}
    \PYG{n}{col} \PYG{o}{=} \PYG{n}{node}\PYG{o}{.}\PYG{n}{col}
    \PYG{k}{for} \PYG{n}{row} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{9}\PYG{p}{):}
        \PYG{k}{if} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}\PYG{o}{.}\PYG{n}{value} \PYG{o}{==} \PYG{n}{value}\PYG{p}{:}
            \PYG{k}{return} \PYG{n+nb+bp}{False}

    \PYG{c+c1}{\PYGZsh{} Column}
    \PYG{n}{row} \PYG{o}{=} \PYG{n}{node}\PYG{o}{.}\PYG{n}{row}
    \PYG{k}{for} \PYG{n}{col} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{9}\PYG{p}{):}
        \PYG{k}{if} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}\PYG{o}{.}\PYG{n}{value} \PYG{o}{==} \PYG{n}{value}\PYG{p}{:}
            \PYG{k}{return} \PYG{n+nb+bp}{False}
    \PYG{c+c1}{\PYGZsh{} Box}
    \PYG{n}{row} \PYG{o}{=} \PYG{p}{(}\PYG{n}{node}\PYG{o}{.}\PYG{n}{row} \PYG{o}{//} \PYG{l+m+mi}{3}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{3}
    \PYG{n}{col} \PYG{o}{=} \PYG{p}{(}\PYG{n}{node}\PYG{o}{.}\PYG{n}{col} \PYG{o}{//} \PYG{l+m+mi}{3}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{3}
    \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{):}
        \PYG{k}{for} \PYG{n}{j} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{):}
            \PYG{k}{if} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row} \PYG{o}{+} \PYG{n}{i}\PYG{p}{][}\PYG{n}{col} \PYG{o}{+} \PYG{n}{j}\PYG{p}{]}\PYG{o}{.}\PYG{n}{value} \PYG{o}{==} \PYG{n}{value}\PYG{p}{:}
                \PYG{k}{return} \PYG{n+nb+bp}{False}
    \PYG{k}{return} \PYG{n+nb+bp}{True}

\PYG{k}{def} \PYG{n+nf}{order}\PYG{p}{(}\PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n}{puzzle}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZsq{}\PYGZsq{}\PYGZsq{}}
\PYG{l+s+sd}{    returns the order of the domain to check using the least}
\PYG{l+s+sd}{    contraining value heuristic}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    Params:}
\PYG{l+s+sd}{        row: The row of the current node}
\PYG{l+s+sd}{        col: The col of the current node}
\PYG{l+s+sd}{        puzzle: A 2d array of Node objects}
\PYG{l+s+sd}{    returns:}
\PYG{l+s+sd}{        The domain as a new array in the order to use}
\PYG{l+s+sd}{    \PYGZsq{}\PYGZsq{}\PYGZsq{}}

    \PYG{n}{node} \PYG{o}{=} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}

    \PYG{n}{order} \PYG{o}{=} \PYG{p}{[]}
    \PYG{k}{for} \PYG{n}{value} \PYG{o+ow}{in} \PYG{n}{node}\PYG{o}{.}\PYG{n}{domain}\PYG{p}{:}
        \PYG{n}{affectedValues} \PYG{o}{=} \PYG{l+m+mi}{0}

        \PYG{n}{boxRow} \PYG{o}{=} \PYG{p}{(}\PYG{n}{node}\PYG{o}{.}\PYG{n}{row} \PYG{o}{//} \PYG{l+m+mi}{3}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{3}
        \PYG{n}{boxCol} \PYG{o}{=} \PYG{p}{(}\PYG{n}{node}\PYG{o}{.}\PYG{n}{col} \PYG{o}{//} \PYG{l+m+mi}{3}\PYG{p}{)} \PYG{o}{*} \PYG{l+m+mi}{3}
        \PYG{c+c1}{\PYGZsh{} Row}
        \PYG{n}{col} \PYG{o}{=} \PYG{n}{node}\PYG{o}{.}\PYG{n}{col}
        \PYG{k}{for} \PYG{n}{row} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{9}\PYG{p}{):}
            \PYG{k}{if} \PYG{n}{boxRow} \PYG{o}{\PYGZlt{}=} \PYG{n}{row} \PYG{o}{\PYGZlt{}} \PYG{n}{boxRow} \PYG{o}{+} \PYG{l+m+mi}{3}\PYG{p}{:}
                \PYG{k}{continue}
            \PYG{k}{if} \PYG{n}{value} \PYG{o+ow}{in} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}\PYG{o}{.}\PYG{n}{domain}\PYG{p}{:}
                \PYG{n}{affectedValues} \PYG{o}{+=} \PYG{l+m+mi}{1}

        \PYG{c+c1}{\PYGZsh{} Column}
        \PYG{n}{row} \PYG{o}{=} \PYG{n}{node}\PYG{o}{.}\PYG{n}{row}
        \PYG{k}{for} \PYG{n}{col} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{9}\PYG{p}{):}
            \PYG{k}{if} \PYG{n}{boxCol} \PYG{o}{\PYGZlt{}=} \PYG{n}{col} \PYG{o}{\PYGZlt{}} \PYG{n}{boxCol} \PYG{o}{+} \PYG{l+m+mi}{3}\PYG{p}{:}
                \PYG{k}{continue}
            \PYG{k}{if} \PYG{n}{value} \PYG{o+ow}{in} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{row}\PYG{p}{][}\PYG{n}{col}\PYG{p}{]}\PYG{o}{.}\PYG{n}{domain}\PYG{p}{:}
                \PYG{n}{affectedValues} \PYG{o}{+=} \PYG{l+m+mi}{1}

        \PYG{c+c1}{\PYGZsh{} Box}
        \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{):}
            \PYG{k}{for} \PYG{n}{j} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{l+m+mi}{3}\PYG{p}{):}
                \PYG{k}{if} \PYG{n}{value} \PYG{o+ow}{in} \PYG{n}{puzzle}\PYG{p}{[}\PYG{n}{boxRow} \PYG{o}{+} \PYG{n}{i}\PYG{p}{][}\PYG{n}{boxCol} \PYG{o}{+} \PYG{n}{j}\PYG{p}{]}\PYG{o}{.}\PYG{n}{domain}\PYG{p}{:}
                    \PYG{n}{affectedValues} \PYG{o}{+=} \PYG{l+m+mi}{1}

        \PYG{n}{order}\PYG{o}{.}\PYG{n}{append}\PYG{p}{((}\PYG{n}{value}\PYG{p}{,} \PYG{n}{affectedValues}\PYG{p}{))}

    \PYG{n}{order} \PYG{o}{=} \PYG{n+nb}{sorted}\PYG{p}{(}\PYG{n}{order}\PYG{p}{,} \PYG{n}{key}\PYG{o}{=}\PYG{k}{lambda} \PYG{n}{x}\PYG{p}{:} \PYG{n}{x}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{])}
    \PYG{k}{return} \PYG{p}{[}\PYG{n}{x}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{]} \PYG{k}{for} \PYG{n}{x} \PYG{o+ow}{in} \PYG{n}{order}\PYG{p}{]}
\end{Verbatim}
